<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Excel转Word</title>
      <link href="/2025/03/20/Excel%E5%88%B0Word%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
      <url>/2025/03/20/Excel%E5%88%B0Word%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>Excel到Word之间的转换<br>引言<br>以下是两份Excel，但是内容的呈现不是特别高效，所以打算转到Word报告方便传上企业微信，飞书等</p><p>需求：日常工作中，需要对Excel表格的数据进行筛选计算整理，然后将数据做成Word报告。Word报告的格式已经标准化，数据填入Word过程机械化、耗费时间。<br>本节通过使用Python进行自动化生成Word极大提高效率。</p><p>准备工作<br>使用到Python.docx库<br>在官方的样例代码可以找到如下<br><img src="/img/图片1.png" alt=""><br>我们将的Excel表格中的有效信息手动输入到Word中为：</p><p>结构为：<br>品牌名称<br>视频标题<br>视频脚本</p><p>安装python-docx库<br>打开jupyter</p><p>在终端输入pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> python-docx</p><p>再打开jupyter<br>新建py note</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from docx import Document</span><br><span class="line">from docx.shared import Inches</span><br><span class="line"></span><br><span class="line">document = Document()</span><br><span class="line"></span><br><span class="line">document.add_heading(&#x27;Document Title&#x27;, 0)</span><br><span class="line"></span><br><span class="line">p = document.add_paragraph(&#x27;A plain paragraph having some &#x27;)</span><br><span class="line">p.add_run(&#x27;bold&#x27;).bold = True</span><br><span class="line">p.add_run(&#x27; and some &#x27;)</span><br><span class="line">p.add_run(&#x27;italic.&#x27;).italic = True</span><br><span class="line"></span><br><span class="line">document.add_heading(&#x27;Heading, level 1&#x27;, level=1)</span><br><span class="line">document.add_paragraph(&#x27;Intense quote&#x27;, style=&#x27;Intense Quote&#x27;)</span><br><span class="line"></span><br><span class="line">document.add_paragraph(</span><br><span class="line">    &#x27;first item in unordered list&#x27;, style=&#x27;List Bullet&#x27;</span><br><span class="line">)</span><br><span class="line">document.add_paragraph(</span><br><span class="line">    &#x27;first item in ordered list&#x27;, style=&#x27;List Number&#x27;</span><br><span class="line">)</span><br><span class="line">document.add_page_break()</span><br><span class="line"></span><br><span class="line">document.save(&#x27;demo1.docx&#x27;)</span><br></pre></td></tr></table></figure><p>就可以在对应文件夹上找到生成的demo1文档，并且内容如下<br> <img src="/img/图片2.png" alt=""></p><p>对比上面的代码可以知道结构对应的函数</p><p>结构为：<br>品牌名称  标题一  add_heading<br>视频标题  标题二  add_heading<br>视频脚本  正文    add_paragraph</p><p>输入以下代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from docx import Document</span><br><span class="line">document = Document() #就是添加一个新的文档的意思</span><br><span class="line"></span><br><span class="line">document.add_heading(&#x27;罗杰夫&#x27;, level=1)</span><br><span class="line">document.add_heading(&#x27;答应我，不做臭男人#糟糕是心动的感觉 #恋爱的感觉 @小奈奈✈️ #男神必备 #颜值爆表 &#x27;, level=2)</span><br><span class="line">document.add_paragraph(&#x27;好香的所有风云一次大步往前走&#x27;)</span><br><span class="line">document.save(&#x27;demo1.docx&#x27;)</span><br></pre></td></tr></table></figure></p><p>打开文档可以发现按照想要的格式变成Word了<br> <img src="/img/图片3.png" alt=""><br>Excel到Word的基本转换<br>接下来就是换成所有内容，不断循环上面的代码</p><p>使用pandas和for循环进行<br>使用pandas读取Excel文件<br>加载数据：<br>路径：/ video_list.xlsx<br>     / speech_text.xlsx,都在同一路径下<br>pandas.read_excel()的作用：将Excel文件读取到pandas DataFrame中。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">video_list = pd.read_excel(&#x27;video_list.xlsx&#x27;) #读取Excel并传给新建的video_list</span><br><span class="line">speech_text = pd.read_excel (&#x27;speech_text.xlsx&#x27;)</span><br></pre></td></tr></table></figure><br>数据合并与处理<br>使用info查看参数的类型<br>video_list.info()<br>发现id是int类型的，我们转换成字符串<br> <img src="/img/图片4.png" alt=""></p><p>使用 Pandas 的 astype 方法将数据帧（DataFrame）或序列（Series）中的数据类型转换为字符串类型<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">video_list[&#x27;AwemeId&#x27;] = video_list[&#x27;AwemeId&#x27;].astype(str)</span><br></pre></td></tr></table></figure><br>同理speech_text也是一样<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">speech_text[&#x27;VideoId&#x27;] = speech_text[&#x27;VideoId&#x27;].astype(str)</span><br></pre></td></tr></table></figure><br>将两表连起来，使用内连接，可以保留两个数据集中同时存在的样本，这些样本的其他特征都会保留，这里键不一样要说出左表和右表的列名<br>内连接的使用方法<br>left: 拼接的左侧DataFrame对象<br>right: 拼接的右侧DataFrame对象<br>on: 要加入的列或索引级别名称。 必须在左侧和右侧DataFrame对象中找到。 如果未传递且left_index和right_index为False，则DataFrame中的列的交集将被推断为连接键。<br>left_on:左侧DataFrame中的列或索引级别用作键。 可以是列名，索引级名称，也可以是长度等于DataFrame长度的数组。<br>right_on: 左侧DataFrame中的列或索引级别用作键。 可以是列名，索引级名称，也可以是长度等于DataFrame长度的数组。<br>合并两个DataFrame<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">merge =pd.merge(video_list, speech_text, how=&#x27;inner&#x27;,left_on=&#x27;AwemeId&#x27;,right_on=&#x27;VideoId&#x27;)</span><br></pre></td></tr></table></figure><br>自动化生成Word报告<br>使用for循环写入代码，实现转换<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">document = Document()</span><br><span class="line">for i in range(len(merge)):</span><br><span class="line"> print(merge.iloc[i][&#x27;品牌&#x27;])</span><br><span class="line"> document.add_heading(merge.iloc[i][&#x27;品牌&#x27;], level=1)</span><br><span class="line"> document.add_heading(merge.iloc[i][&#x27;视频标题&#x27;], level=2)</span><br><span class="line"> document.add_paragraph(merge.iloc[i][&#x27;视频文案&#x27;])</span><br><span class="line"> document.save(&#x27;demo.docx&#x27;)  </span><br></pre></td></tr></table></figure><br> <img src="/img/图片5.png" alt=""></p><p>优化报告生成过程<br>把相同品牌的合并掉，每个品牌只出现一次</p><p>思路就判断当前数据的品牌是否与上一条相同，不同就正常打印，相同就不打印名称，当然当索引为0时也正常打印。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">document = Document()</span><br><span class="line">for i in range(len(merge)):</span><br><span class="line">    if merge.iloc[i][&#x27;品牌&#x27;] != merge.iloc[i-1][&#x27;品牌&#x27;] or i == 0:</span><br><span class="line">        print(merge.iloc[i][&#x27;品牌&#x27;])</span><br><span class="line">        document.add_heading(merge.iloc[i][&#x27;品牌&#x27;], level=1)</span><br><span class="line">        document.add_heading(merge.iloc[i][&#x27;视频标题&#x27;], level=2)</span><br><span class="line">        document.add_paragraph(merge.iloc[i][&#x27;视频文案&#x27;])</span><br><span class="line">document.save(&#x27;demo.docx&#x27;)</span><br></pre></td></tr></table></figure><br>结果如下：<br> <img src="/img/图片6.png" alt=""></p><p>接着优化，将不同列名输入进来，比如昵称，视频地址等<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">document = Document()</span><br><span class="line">for i in range(len(merge)):</span><br><span class="line">    if merge.iloc[i][&#x27;品牌&#x27;] != merge.iloc[i-1][&#x27;品牌&#x27;] or i == 0:</span><br><span class="line">        print(merge.iloc[i][&#x27;品牌&#x27;]) </span><br><span class="line">        document.add_heading(merge.iloc[i][&#x27;品牌&#x27;], level=1)</span><br><span class="line">        document.add_heading(merge.iloc[i][&#x27;视频标题&#x27;], level=2)</span><br><span class="line">        document.add_paragraph(f&#x27;达人昵称: &#123;merge.iloc[i][&quot;BloggerName&quot;]&#125;&#x27;) </span><br><span class="line">        document.add_paragraph(f&#x27;视频地址:douyin.com/video/ &#123;merge.iloc[i][&quot;AwemeId&quot;]&#125;&#x27;)  #这里字段名要用双引号括起来，不然py会误判结束位置</span><br><span class="line">        document.add_paragraph(merge.iloc[i][&#x27;视频文案&#x27;])</span><br><span class="line">document.save(&#x27;demo.docx&#x27;)</span><br></pre></td></tr></table></figure><br>结果：</p><p> <img src="/img/图片7.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Excel </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>tableau-数据分层-数据组-数据集</title>
      <link href="/2025/03/20/tableau-%E6%95%B0%E6%8D%AE%E5%88%86%E5%B1%82-%E6%95%B0%E6%8D%AE%E7%BB%84-%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
      <url>/2025/03/20/tableau-%E6%95%B0%E6%8D%AE%E5%88%86%E5%B1%82-%E6%95%B0%E6%8D%AE%E7%BB%84-%E6%95%B0%E6%8D%AE%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>本节介绍：<br><img src="/img/1.png" alt=""></p><h3 id="分层结构"><a href="#分层结构" class="headerlink" title="分层结构"></a><strong>分层结构</strong></h3><h4 id="分层结构概念"><a href="#分层结构概念" class="headerlink" title="分层结构概念"></a><strong>分层结构概念</strong></h4><p>分层结构是一种维度之间自上而下的组织形式，Tableau默认包含对某些字段的分层结构，比如日期、日期与时间、地理角色，以日期为例，日期本来就包括年、月、日的层次结构。</p><p>将数据连接好创建工作表，得到基本图</p><p><img src="/img/2.png" alt=""></p><p>在列处点击年旁边的加号可以进行下钻，扩展成季度</p><p>再下钻变成月，这就是<strong>数据分层</strong>，<strong>年-季度-月</strong></p><p><img src="/img/3.png" alt=""></p><p>分层结构实例：</p><p> 打开‘<strong>人工坐席接听数据.xlsx</strong>’并连接</p><h4 id="创建分层结构"><a href="#创建分层结构" class="headerlink" title="创建分层结构"></a><strong>创建分层结构</strong></h4><p>方法一：<strong>右键-分层结构-创建分层结构</strong></p><p><img src="/img/4.png" alt=""></p><p>方法二：直接把需要分层的两个维度拖到一起</p><p><img src="/img/5.png" alt=""></p><h4 id="分层实例"><a href="#分层实例" class="headerlink" title="分层实例"></a>分层实例</h4><p>创建完结构后以<strong>柱状图</strong>为例</p><p>按顺序把不同维度拖入到层级中，注意要按照大小，比如组是在部的下面，顺序依次是中心、部、组、班。</p><p><img src="/img/6.png" alt=""></p><p> 接下来把中心-列，并且下钻，接听量-行</p><p><a href="/img/7.png"></a></p><p>拖入接听量进标签并设置格式，数据更简洁</p><p><a href="/img/8.png"></a></p><p>下钻发现异常，将异常数据删掉</p><p><a href="/img/9.png"></a></p><p>排除异常后上钻即可。</p><p>下面以<strong>折线图</strong>为例</p><p>将日期-&gt;列，中心-&gt;行，平均通话时长-&gt;行,日期换成天</p><p><a href="/img/10.png"></a></p><p>把中心往下钻</p><p><a href="/img/11.png"></a></p><p>这样就能知道每个组每个班不同客服的通话情况</p><p>最后，<strong>层级是不可以嵌套。</strong></p><h3 id="数据分组"><a href="#数据分组" class="headerlink" title="数据分组"></a><strong>数据分组</strong></h3><p>组不可以用于创建字段，不能出现在公式中</p><p>将数据拖入行列中</p><p><img src="https://i-blog.csdnimg.cn/direct/864912757de349539fdf05914c48eabf.png" alt=""></p><h4 id="创建分组"><a href="#创建分组" class="headerlink" title="创建分组"></a>创建分组</h4><p>方法一：直接在数据中<strong>右键-分组</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/597dd53b74774793861495485b9b5a02.png" alt=""></p><p>方法二：右键直接点对应的<strong>维度-创建-组</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/e352005e70184bb49644d09969e35230.png" alt=""></p><h4 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h4><p>创建好后，可以进行编辑</p><p><img src="https://i-blog.csdnimg.cn/direct/de48063c8ac44598aa6f6382dba430fc.png" alt=""></p><p>对不同数据进行清洗处理，比如15班的几个子集分成同一个组，按住ctrl可以多选，然后右键。</p><p><img src="https://i-blog.csdnimg.cn/direct/6131d26b62c347e5b89f81203492bb39.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/24be3ce7681f4a768ec9b5c13be7ad45.png" alt=""></p><p>不同数据进行合并后：</p><p><img src="https://i-blog.csdnimg.cn/direct/4b37a58cdd10413a83d64d7f3f5541bb.png" alt=""></p><p>这里的“其他”是除了已经有的归类的其他剩下来的班，和“其他组”并不一样。这里的“其他”只是除了11班，13班，15班以外的数字班。而“其他”是奇奇怪怪的组，可以说是“异类”。</p><p><img src="https://i-blog.csdnimg.cn/direct/88163a8732c44eaca6f760879ab8b756.png" alt=""><img src="https://i-blog.csdnimg.cn/direct/ee2c464555c64a96845f5b9c424cbeee.png" alt=""></p><p>这样，把创建并处理好的组代替原来的班</p><p><img src="https://i-blog.csdnimg.cn/direct/f6f07a8e5dd048bcad9ccaad2563848f.png" alt=""></p><p>同时还能把“其他”筛选进来</p><p><img src="https://i-blog.csdnimg.cn/direct/555e3e9b037249e9a3479a1b6297fd3b.png" alt=""></p><p>然后升序降序，使图形更加完善</p><p><img src="https://i-blog.csdnimg.cn/direct/4f64affd57604c7b9e6b11aa51024225.png" alt=""></p><h4 id="实例2：电量销售数据按地理区域分组"><a href="#实例2：电量销售数据按地理区域分组" class="headerlink" title="实例2：电量销售数据按地理区域分组"></a>实例2：电量销售数据按地理区域分组</h4><p> 打开‘<strong>各省市售电量数据.xlsx</strong>’并连接</p><p>进行数据处理，将未知的地理角色进行筛选，省市选择省，城市则选择城市。</p><p><img src="https://i-blog.csdnimg.cn/direct/ba2556f083fa49738141f53a8e0970ff.png" alt=""></p><p>处理完后把省市拖到详细信息处</p><p><img src="https://i-blog.csdnimg.cn/direct/5b495a0e3b0e47138425a327a2ae7458.png" alt=""></p><p>将三个未知位置选择到正确省份</p><p><img src="https://i-blog.csdnimg.cn/direct/f126a8cab8604cb08c8f01948a9704aa.png" alt=""></p><p>分组:</p><p>将黑吉辽三省左键长按框柱，<img src="https://i-blog.csdnimg.cn/direct/427eb94703bf4a589d8881b625016cf6.png" alt=""></p><p>再右键分组</p><p><img src="https://i-blog.csdnimg.cn/direct/c54c3e7fc0434d5b8c6ef9df64988e00.png" alt=""></p><p>华东：<img src="https://i-blog.csdnimg.cn/direct/14e2ca662cc740bfa1ac4bfd9ad716c6.png" alt=""></p><p>华北：<img src="https://i-blog.csdnimg.cn/direct/9770fb810ea34530b16e7f156a096cb2.png" alt=""></p><p>华中：<img src="https://i-blog.csdnimg.cn/direct/bd68a7444d2e42d784a3b37e16c52f64.png" alt=""></p><p>西南：<img src="https://i-blog.csdnimg.cn/direct/b9698bb743d040fd9473535ae33c658f.png" alt=""></p><p>西北：<img src="https://i-blog.csdnimg.cn/direct/4aec8cc9c27647bb94db0592cea7e513.png" alt=""></p><p>分完组后进行编辑</p><p><img src="https://i-blog.csdnimg.cn/direct/7be69f60ef2c48cd87501944fd01ca98.png" alt=""></p><p>按照上面的分组重命名</p><p><img src="https://i-blog.csdnimg.cn/direct/e573c47ca46d45bd838630959897b9ee.png" alt=""></p><p>创建好了组，我们进行筛选，将刚刚的组拖入到颜色中</p><p><img src="https://i-blog.csdnimg.cn/direct/272a227746af4198b7492e1942d8783a.png" alt=""></p><p>当期值拖到大小。</p><p><img src="https://i-blog.csdnimg.cn/direct/268ab93124f4411c86ac6dc78581f484.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/0a731c7e503d48c9a427b41ed9e75676.png" alt=""></p><h4 id="实例3：各区域用电量"><a href="#实例3：各区域用电量" class="headerlink" title="实例3：各区域用电量"></a><strong>实例3：各区域用电量</strong></h4><p>把刚刚创建的组-中国地理区域拖到详细信息中，再把当期值拖到颜色</p><p><img src="https://i-blog.csdnimg.cn/direct/25c2084666ae4fc0852563a9bf420dff.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/1558e9da9c4b4dcfb184b1700d5721a8.png" alt=""></p><p>颜色深浅代表各区域用电多少。</p><h4 id="实例4：各地区电量销售标靶图"><a href="#实例4：各地区电量销售标靶图" class="headerlink" title="实例4：各地区电量销售标靶图"></a>实例4：各地区电量销售标靶图</h4><p>中国地理区域和省市拖入行，当期值拖入列</p><p><img src="https://i-blog.csdnimg.cn/direct/2eb67a87713a40e2a2aa2a9abb6a3c95.png" alt=""></p><p>中国地理区域选择颜色</p><p><img src="https://i-blog.csdnimg.cn/direct/44a7cd549d5f41b8aaa831bf29e1a791.png" alt=""></p><p>月度计划值拖入详细信息中，然后<strong>右键-添加参考线</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/1c41e65fa022430594aa89d79c94277f.png" alt=""></p><p>在分布处进行编辑，把值换成50，100，然后线条填充自己来就行</p><p><img src="https://i-blog.csdnimg.cn/direct/1db34be1d1264201b8f3438e3f05bf61.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/e992d63bc66f48d5895ae3f165e9090f.png" alt=""></p><h3 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h3><h4 id="集的概念："><a href="#集的概念：" class="headerlink" title="集的概念："></a>集的概念：</h4><p><img src="https://i-blog.csdnimg.cn/direct/6f9dc32798de481a8b6cbd9abeb4a7c8.png" alt=""></p><h4 id="创建数据集"><a href="#创建数据集" class="headerlink" title="创建数据集"></a>创建数据集</h4><h5 id="静态数据集"><a href="#静态数据集" class="headerlink" title="静态数据集"></a>静态数据集</h5><p>打开‘<strong>全球超市订单数据.xlsx</strong>’并连接</p><p>国家/地区-列，利润-行，按倒序排列</p><p><img src="https://i-blog.csdnimg.cn/direct/651e73928cd74e1eb39f5d110a58274d.png" alt=""></p><p>然后找到所有负值并选取</p><p><img src="https://i-blog.csdnimg.cn/direct/ba11d9c21d6e47508eea610bc543a8a4.png" alt=""></p><p>鼠标悬浮在数据上，选择创建集</p><p><img src="https://i-blog.csdnimg.cn/direct/2a3a1036c2694b378e48b0ef63949a5f.png" alt=""></p><p>重命名为负利润国家</p><p><img src="https://i-blog.csdnimg.cn/direct/243ceba8419643bca081517bea977bbd.png" alt=""></p><p>接下来就可以对图进行一些优化，比如市场0列，然后利润拖入颜色</p><p>再编辑颜色，2阶</p><p><img src="https://i-blog.csdnimg.cn/direct/e2bd05ea08e544fe96347c8cebd7ce93.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/f0455271a15745d39951d85a70cfd1fa.png" alt=""></p><p>再把细分市场拖进来，按照市场-细分市场-国家/地区的顺序</p><p><img src="https://i-blog.csdnimg.cn/direct/12c4703b4b1c41dd94893e438c3516dd.png" alt=""></p><p>按住Ctrl键选择<strong>所有负利润国家，</strong>然后<strong>右键-创建集</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/cb00140aafb84d349717dbd306aa4684.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/0f6e1a68172b435c8aecdebf4aaa398f.png" alt=""></p><p>我们发现相比于负利润国家1，多了两列可筛选的条件，使得结果更精确。</p><h5 id="动态数据集"><a href="#动态数据集" class="headerlink" title="动态数据集"></a>动态数据集</h5><p>选择<strong>维度-产品名称-创建-集</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/bac45a16cba9462bbd1667c9f4dc36f7.png" alt=""></p><p>选择条件，重命名为负利润产品，按字段，筛选条件为利润&lt;=0</p><p><img src="https://i-blog.csdnimg.cn/direct/260a5fef6a214dbca56d70761e91a7df.png" alt=""></p><p>然后<strong>利润-列</strong>，<strong>负利润产品-行</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/2c92955b723c429c8630b804ccf36f44.png" alt=""></p><p>我们要看负利润产品的具体情况，在<strong>负利润产品右键-在集内显示成员</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/030e94504bb24a3ea88ec8a764b9a602.png" alt=""></p><p>就可以看到每个亏本产品的利润情况</p><p><img src="https://i-blog.csdnimg.cn/direct/cfd587a6616d414089aa71aa6a2306a2.png" alt=""></p><p><strong>通过排序创建数据集</strong></p><p>还是<strong>维度-产品名称-创建-集</strong></p><p>这次在<strong>顶部</strong>这边选择<strong>100，</strong>依据是<strong>数量</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/f75ebbe8578a45819f64a509fe076284.png" alt=""></p><h4 id="合并集"><a href="#合并集" class="headerlink" title="合并集"></a>合并集</h4><p>合并同一个维度的集</p><p>选择<strong>负利润产品-创建合并集</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/e6d7097786b84fe69e01d4e724439834.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/direct/d0043f64e6a1412dbb1c4705e2312275.png" alt=""></p><p>将地区拖到<strong>筛选器</strong>中</p><p><img src="https://i-blog.csdnimg.cn/direct/4b0a4fd1ecb14f6c86fc93180e077d08.png" alt=""></p><p>选择西亚，南亚，东亚，东南亚，中亚</p><p><img src="https://i-blog.csdnimg.cn/direct/9d0319a0b3b5434c8857afdc32ed6781.png" alt=""></p><p>选择完以后，点<strong>确定</strong>退出来后再<strong>右键-创建集</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/d35da387e34345cea2c2ae85f2d16bf0.png" alt=""></p><p>取名为<strong>亚洲地区</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/801a4414557e4b00a4d78100d8b518ce.png" alt=""></p><p>这就通过集的方式进行了快速筛选，确定了亚洲地区</p><p>最后我们用数据集进行对比分析</p><p><strong>利润-行</strong>，<strong>负利润但热销的产品-列</strong>，选择显示<strong>集内成员</strong></p><p><img src="https://i-blog.csdnimg.cn/direct/bd16fded49d44c0aa89621a3da07a471.png" alt=""></p><p>这就看出这个产品亏损最多</p>]]></content>
      
      
      <categories>
          
          <category> Tableau </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用简单的爬虫爬取b站弹幕并生成词云图</title>
      <link href="/2025/03/20/%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"/>
      <url>/2025/03/20/%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<p>所谓爬虫就是模拟浏览器对于服务器发送请求，通过代码去模拟浏览器来得到想要的结果。<br>爬虫代码基本实现的步骤是<br>1.发送请求，对于想要爬的视频网站的URL地址发送请求<br>2.获取数据，获取服务器返回的一个输出内容，一般长这样，有很多元素组成<br> <img src="/img/图片8.png" alt=""><br>3.解析数据，就是提取想要的数据内容，比如上面就是把弹幕的内容单独提取出来，而不要其他的数据。<br>4.保存数据，把获取下来的数据内容保存到txt文本里。</p><p>数据收集<br>发送请求<br>先导入一个模块<br>Import requests<br>这是第三方模块，没下载的需要在终端install requests一下。<br>确定URL地址，就是你想要爬的视频地址，确定好cid </p><p> <img src="/img/图片9.png" alt=""></p><p>然后是headers的请求头，作用就是进行伪装，模拟浏览器发送请求</p><p>参数就是在开发者工具里面找到的，一般只要UA就可以了。<br> <img src="/img/图片10.png" alt=""></p><p>我这里是：Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36 Edg/134.0.0.0</p><p>里面包含的是浏览器的一个基本信息，比如浏览器发送过来请求的什么版本，系统之类的。类似人类的身份证。</p><p>最后通过requests模块里面get请求方法，对于url地址发送请求，并且携带上headers请求头，再用response变量去接收返回数据<br>这一步的代码就是<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">#headers请求头作用把Python代码进行伪装，模拟成浏览器去发送请求</span><br><span class="line">#user-agent浏览器基本身份标识</span><br><span class="line"># 需要先找到 `cid` 才能请求正确的弹幕 API</span><br><span class="line">cid = &quot;25750933691&quot;  # 这里的 `123456` 需要替换为真实的 `cid`</span><br><span class="line"></span><br><span class="line"># B站弹幕 API</span><br><span class="line">danmu_url = f&quot;https://api.bilibili.com/x/v1/dm/list.so?oid=&#123;cid&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 正确的请求头</span><br><span class="line">headers = &#123;</span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36 Edg/134.0.0.0&quot;,</span><br><span class="line">    &quot;Referer&quot;: &quot;https://www.bilibili.com/&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 发送请求</span><br><span class="line">response = requests.get(url=danmu_url, headers=headers)</span><br><span class="line">#&lt;Response[200]&gt;response  对象200状态码 表示请求成功</span><br><span class="line">response.encoding=response.apparent_encoding#这里进行转码，不然结果输出会有乱码</span><br></pre></td></tr></table></figure><br>获取数据<br>就直接把上面的内容打印出来即可<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(response.text)#用于验证数据正确性</span><br></pre></td></tr></table></figure><br><img src="/img/图片11.png" alt=""><br>解析数据<br>一般有三种解析方式</p><ol><li>re-正则表达式 对于字符串数据进行提取</li><li>css和xpath主要根据标签属性/节点提取数据</li></ol><p>我们上面获取的text文件是HTML的字符串数据，直接用re正则就可以了。</p><p>使用re.findall，有两个参数，一个是找什么东西，然后是从哪里去找，</p><p>查看弹幕地址<br><img src="/img/图片12.png" alt=""><br>我们发现弹幕数据由两种组成，一个是用户的数据，一个是弹幕内容，我们要的是后者。<br>所以在re.findall里面我们模糊用户的数据就可以了，也就是泛匹配。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_list= re.findall(&#x27;&lt;d p=&quot;.*?&quot;&gt;(.*?)&lt;/d&gt;&#x27;,response.text)#.*?是通配符，正则表达式元字符可以匹配任意字符（除了换行符\n以外）</span><br></pre></td></tr></table></figure><br>再用一个for循环逐个把弹幕打出来就可以了。<br><img src="/img/图片13.png" alt=""></p><p>保存数据<br>写入保存到txt文件下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data_list= re.findall(&#x27;&lt;d p=&quot;.*?&quot;&gt;(.*?)&lt;/d&gt;&#x27;,response.text)#.*?是通配符，正则表达式元字符可以匹配任意字符（除了换行符\n以外）</span><br><span class="line">for index in data_list:</span><br><span class="line">    # mode 保存方式 encoding 编码</span><br><span class="line">    with open(&#x27;弹幕.txt&#x27;, mode=&#x27;a&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span><br><span class="line">      f.write(index + &#x27;\n&#x27;)</span><br><span class="line">      print(index)</span><br></pre></td></tr></table></figure></p><p> <img src="/img/图片14.png" alt=""></p><p>分析数据<br>获取数据后，就可以进行分析了<br>首先是准备<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import jieba # 结巴分词 pip install jieba</span><br><span class="line">import wordcloud #词云图 pip install wordcloud</span><br></pre></td></tr></table></figure><br>读取数据弹幕<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = open(&#x27;弹幕.txt&#x27;,encoding=&#x27;utf-8&#x27;)</span><br><span class="line">text = f.read()</span><br><span class="line">#print(text)</span><br></pre></td></tr></table></figure></p><p>分词，把弹幕分割成词语<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text_list=jieba.lcut(text)</span><br><span class="line">print(text_list)</span><br></pre></td></tr></table></figure><br> <img src="/img/图片15.png" alt=""><br>我们做词云图要用到字符串数据，所以我们还要把列表转成字符串，用列表的话数据会报错<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text_str = &#x27; &#x27;.join(text_list)</span><br></pre></td></tr></table></figure><br>词云图配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wc = wordcloud.WordCloud(</span><br><span class="line">width=500,# 宽度</span><br><span class="line">height=500,#高度</span><br><span class="line">background_color=&#x27;white&#x27;,</span><br><span class="line">font_path=&#x27;msyh.ttc&#x27;#字体文件</span><br><span class="line">)#背景颜色</span><br><span class="line"></span><br><span class="line">![](/img/图片16.png)</span><br><span class="line">wc.generate(text_str)#传入文字信息</span><br><span class="line">wc.to_file(&#x27;词云.png&#x27;)</span><br></pre></td></tr></table></figure></p><p>但是还是有很多无效的词，比如‘吧’ ‘了’之类的<br>再加入一个stopwords<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stopwords=&#123;&#x27;了&#x27;,&#x27;吧&#x27;&#125;</span><br></pre></td></tr></table></figure><br>修改词云图形</p><p>配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import imageio # 读取本地图片修改词云图形pip install imageio</span><br><span class="line">#加入png图片进配置文件夹，再加两行代码</span><br><span class="line">img = imageio.imread(&#x27;红心.png&#x27;)</span><br><span class="line">mask=img,</span><br></pre></td></tr></table></figure><br> <img src="/img/图片17.png" alt=""><br> 源代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">#headers请求头作用把Python代码进行伪装，模拟成浏览器去发送请求</span><br><span class="line">#user-agent浏览器基本身份标识</span><br><span class="line"># 需要先找到 `cid` 才能请求正确的弹幕 API</span><br><span class="line">cid = &quot;25750933691&quot;  # 这里的 `123456` 需要替换为真实的 `cid`</span><br><span class="line"></span><br><span class="line"># B站弹幕 API</span><br><span class="line">danmu_url = f&quot;https://api.bilibili.com/x/v1/dm/list.so?oid=&#123;cid&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 正确的请求头</span><br><span class="line">headers = &#123;</span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36 Edg/134.0.0.0&quot;,</span><br><span class="line">    &quot;Referer&quot;: &quot;https://www.bilibili.com/&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 发送请求</span><br><span class="line">response = requests.get(url=danmu_url, headers=headers)</span><br><span class="line">#&lt;Response[200]&gt;response  对象200状态码 表示请求成功</span><br><span class="line">response.encoding=response.apparent_encoding#这里进行转码，不然结果输出会有乱码</span><br><span class="line"></span><br><span class="line">data_list= re.findall(&#x27;&lt;d p=&quot;.*?&quot;&gt;(.*?)&lt;/d&gt;&#x27;,response.text)#.*?是通配符，正则表达式元字符可以匹配任意字符（除了换行符\n以外）</span><br><span class="line">for index in data_list:</span><br><span class="line">    # mode 保存方式 encoding 编码</span><br><span class="line">    with open(&#x27;弹幕.txt&#x27;, mode=&#x27;a&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span><br><span class="line">      f.write(index + &#x27;\n&#x27;)</span><br><span class="line">      print(index)</span><br><span class="line"></span><br><span class="line">import jieba # 结巴分词 pip install jieba</span><br><span class="line">import wordcloud #词云图 pip install wordcloud</span><br><span class="line">import imageio # 读取本地图片修改词云图形</span><br><span class="line">img = imageio.imread(&#x27;红心.png&#x27;)</span><br><span class="line">#1.读取弹幕数据</span><br><span class="line">f = open(&#x27;弹幕.txt&#x27;,encoding=&#x27;utf-8&#x27;)</span><br><span class="line">text = f.read()</span><br><span class="line">#print(text)</span><br><span class="line"></span><br><span class="line">#2，分词，把一句话分割成很多词汇</span><br><span class="line">text_list=jieba.lcut(text)</span><br><span class="line">print(text_list)</span><br><span class="line"></span><br><span class="line">#列表转成字符串</span><br><span class="line">text_str = &#x27; &#x27; .join(text_list)</span><br><span class="line">print(text_str)</span><br><span class="line"></span><br><span class="line">#3.词云图配置</span><br><span class="line"></span><br><span class="line">wc = wordcloud.WordCloud(</span><br><span class="line">width=500,# 宽度</span><br><span class="line">height=500,#高度</span><br><span class="line">stopwords=&#123;&#x27;了&#x27;,&#x27;吧&#x27;,&#x27;啊&#x27;,&#x27;哈&#x27;,&#x27;的&#x27;,&#x27;啊啊啊&#x27;,&#x27;哈哈哈&#x27;,&#x27;哇&#x27;,&#x27;都&#x27;,&#x27;都是&#x27;,&#x27;这&#x27;,&#x27;一幕&#x27;,&#x27;嗯&#x27;,&#x27;你&#x27;,&#x27;你是&#x27;&#125;,</span><br><span class="line">background_color=&#x27;white&#x27;,#背景颜色</span><br><span class="line">mask=img,</span><br><span class="line">font_path=&#x27;msyh.tth&#x27;#字体文件</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">wc.generate(text_str)#传入文字信息</span><br><span class="line">wc.to_file(&#x27;词云.png&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
